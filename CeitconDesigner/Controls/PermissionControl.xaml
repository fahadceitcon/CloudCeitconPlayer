<UserControl x:Class="Ceitcon_Designer.Controls.PermissionControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Ceitcon_Designer.Controls"
             xmlns:model="clr-namespace:Ceitcon_Data.Model.User;assembly=Ceitcon_Data"
             xmlns:converters="clr-namespace:Ceitcon_Designer.Converters"
             xmlns:utilities="clr-namespace:Ceitcon_Designer.Utilities"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:behaviors="clr-namespace:Ceitcon_Designer.Behaviors"
             mc:Ignorable="d">
    <UserControl.Resources>
        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource StandartTextBlock}"/>
        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource StandartTextBox}"/>
        <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource StandartScrollBar}"/>

        <Style x:Key="styleTreeViewExpandCollapse" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Image x:Name="image" Source="../Images/iconTreeViewPlus.png" />
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="image" Property="Source" Value="../Images/iconTreeViewMinus.png" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="styleTreeView" TargetType="{x:Type TreeViewItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <ControlTemplate.Resources>
                            <converters:LeftMarginMultiplierConverter Length="19" x:Key="lengthConverter" />
                        </ControlTemplate.Resources>
                        <StackPanel>
                            <Border Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                                <Grid Margin="{Binding Converter={StaticResource lengthConverter}, RelativeSource={RelativeSource TemplatedParent}}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MinWidth="19" Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <ToggleButton Grid.Column="0" Margin="0,2,4,0" x:Name="Expander"  Style="{StaticResource styleTreeViewExpandCollapse}" IsChecked="{Binding Path=IsExpanded,  RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"  Width="16" Height="16"/>
                                    <ContentPresenter Grid.Column="1" x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                                </Grid>
                            </Border>
                            <Separator Margin="0,0,0,0"/>
                            <ItemsPresenter x:Name="ItemsHost" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2"/>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="false">
                                <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader" Value="false"/>
                                    <Condition Property="Width" Value="Auto"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header" Property="MinWidth" Value="75"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader" Value="false"/>
                                    <Condition Property="Height" Value="Auto"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header" Property="MinHeight" Value="19"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="40" />
            <RowDefinition Height="30" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <StackPanel Orientation="Horizontal">
            <Button Style="{StaticResource ConfirmButton}" ToolTip="Create User" VerticalAlignment="Bottom" HorizontalAlignment="Left" Width="150" Margin="0,0,0,5"
                    Click="ButtonCreate_Click">
                <StackPanel Orientation="Horizontal" >
                    <Image Source="../Images/iconButton_NetworkAdd.png" Width="20" Height="20" Margin="5,10,5,5"/>
                    <TextBlock Text="Create User" FontSize="16" Margin="5,8,5,5"/>
                </StackPanel>
            </Button>

            <Button Style="{StaticResource ConfirmButton}" ToolTip="Delete User" VerticalAlignment="Bottom" HorizontalAlignment="Left" Width="150" Margin="10,0,0,5"
                    Click="ButtonDelete_Click">
                <StackPanel Orientation="Horizontal">
                    <Image Source="../Images/iconButton_NetworkDelete.png" Width="20" Height="20" Margin="5,10,5,5"/>
                    <TextBlock Text="Delete User" FontSize="16" Margin="5,8,5,5"/>
                </StackPanel>
            </Button>
        </StackPanel>

        <Grid Grid.Row="1" Background="{StaticResource HeaderBackground}">
            <TextBlock Text="GROUPS / USERS / PERMISSIONS" Margin="10,5,5,5" Foreground="{StaticResource HeaderForeground}"/>
        </Grid>

        <TreeView Name="dmtv" ItemsSource="{Binding UserGroups}" Grid.Row="2" Background="White"
            VirtualizingStackPanel.IsVirtualizing="True"
            VirtualizingStackPanel.VirtualizationMode="Recycling">
            <TreeView.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource styleTreeView }">
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                    <Setter Property="FontWeight" Value="Normal" />
                    <Setter Property="FontSize" Value="14" />
                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="FontWeight" Value="Bold" />
                            <Setter Property="Background" Value="Orange" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TreeView.ItemContainerStyle>

            <TreeView.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}"
                     Color="{DynamicResource {x:Static SystemColors.HighlightColorKey}}" />
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}"
                     Color="{DynamicResource {x:Static SystemColors.HighlightTextColorKey}}"/>
                <HierarchicalDataTemplate DataType="{x:Type model:GroupModel}" ItemsSource="{Binding Users}">
                    <TextBlock Text="{Binding Name}" />
                </HierarchicalDataTemplate>

                <HierarchicalDataTemplate DataType="{x:Type model:UserModel}">
                    <TextBlock Text="{Binding Name}" />
                </HierarchicalDataTemplate>

            </TreeView.Resources>
        </TreeView>

        <GridSplitter Grid.Column="1" Grid.RowSpan="3" Width="3" HorizontalAlignment="Stretch" />

        <StackPanel Grid.Column="2" Grid.Row="1" Grid.RowSpan="2">
            <StackPanel.Resources>
                <Style BasedOn="{StaticResource StandartTextBox}" TargetType="{x:Type TextBox}" />
                <Style BasedOn="{StaticResource StandartTextBlock}" TargetType="{x:Type TextBlock}" />
                <DataTemplate DataType="{x:Type model:GroupModel}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="120"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="120"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.Resources>
                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource StandartTextBlock}">
                                <Setter Property="HorizontalAlignment" Value="Right" />
                            </Style>
                        </Grid.Resources>
                        <TextBlock Text="Type: "/>
                        <TextBlock Grid.Column="1" Text="Group" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5,0" />

                        <TextBlock Grid.Row="1" Text="Name: "/>
                        <TextBlock Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="3" Text="{Binding Name, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5,0" />

                        <Grid Grid.Row="2" Grid.ColumnSpan="4" Background="{StaticResource HeaderBackground}" HorizontalAlignment="Stretch"  Margin="0,20,0,0">
                            <TextBlock Text="PERMISSIONS" Margin="5" HorizontalAlignment="Center" Foreground="{StaticResource HeaderForeground}"/>
                        </Grid>

                        <TextBlock Grid.Row="3" Text="Designer: "/>
                        <CheckBox  Grid.Row="3" Grid.Column="1" IsChecked="{Binding PermissionDesign, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="False" Margin="5,15"/>

                        <TextBlock Grid.Row="3" Grid.Column="2" Text="Scheduler: "/>
                        <CheckBox  Grid.Row="3" Grid.Column="3" IsChecked="{Binding PermissionScheduler, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="False" Margin="5,15"/>

                        <TextBlock Grid.Row="4" Text="Alert: "/>
                        <CheckBox  Grid.Row="4" Grid.Column="1" IsChecked="{Binding PermissionAlert, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="False" Margin="5,15"/>

                        <TextBlock Grid.Row="4" Grid.Column="2" Text="Network: "/>
                        <CheckBox  Grid.Row="4" Grid.Column="3" IsChecked="{Binding PermissionNetwork, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="False" Margin="5,15"/>

                        <TextBlock Grid.Row="5" Text="Data Source: "/>
                        <CheckBox  Grid.Row="5" Grid.Column="1" IsChecked="{Binding PermissionDataSource, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="False" Margin="5,15"/>

                        <TextBlock Grid.Row="5" Grid.Column="2" Text="Airline Logo: "/>
                        <CheckBox  Grid.Row="5" Grid.Column="3" IsChecked="{Binding PermissionAirlineLogo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="False" Margin="5,15"/>

                        <TextBlock Grid.Row="6" Text="Players Info: "/>
                        <CheckBox  Grid.Row="6" Grid.Column="1" IsChecked="{Binding PermissionPlayersInformation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="False" Margin="5,15"/>

                        <TextBlock Grid.Row="6" Grid.Column="2" Text="Projects Info: "/>
                        <CheckBox  Grid.Row="6" Grid.Column="3" IsChecked="{Binding PermissionProjectsInformation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="False" Margin="5,15"/>

                        <TextBlock Grid.Row="7" Text="Proof Of Play: "/>
                        <CheckBox  Grid.Row="7" Grid.Column="1" IsChecked="{Binding PermissionProofOfPlay, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="False" Margin="5,15"/>

                        <TextBlock Grid.Row="7" Grid.Column="2" Text="Publishing: "/>
                        <CheckBox  Grid.Row="7" Grid.Column="3" IsChecked="{Binding PermissionChannelsPublishing, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="False" Margin="5,15"/>

                        <TextBlock Grid.Row="8" Text="User: "/>
                        <CheckBox  Grid.Row="8" Grid.Column="1" IsChecked="{Binding PermissionUser, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="False" Margin="5,15"/>

                        <!--<TextBlock Grid.Row="8" Text="Permission Report: "/>
                            <CheckBox  Grid.Row="8" Grid.Column="1" IsChecked="{Binding PermissionReport, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="False" Margin="5,15"/>-->

                    </Grid>
                </DataTemplate>
                <DataTemplate DataType="{x:Type model:UserModel}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="120"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="120"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.Resources>
                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource StandartTextBlock}">
                                <Setter Property="HorizontalAlignment" Value="Right" />
                            </Style>
                        </Grid.Resources>

                        <TextBlock Grid.Row="0" Text="Type: "/>
                        <TextBlock Grid.Column="1" Text="User" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5,0" />

                        <TextBlock Grid.Row="1" Text="Name: "/>
                        <TextBox Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="3" Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="5" MaxLength="50">
                            <i:Interaction.Behaviors>
                                <behaviors:TextBoxEnterKeyUpdateBehavior />
                            </i:Interaction.Behaviors>
                        </TextBox>

                        <TextBlock Grid.Row="2" Text="Password: "/>
                        <PasswordBox
                            Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="3" 
                            x:Name="PasswordBox"
                            utilities:PasswordBoxHelper.Attach="True" 
                            utilities:PasswordBoxHelper.Password="{Binding Password, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="5" MaxLength="30"/>

                        <TextBlock Grid.Row="3" Text="Email: "/>
                        <TextBox Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="3" 
                                 Text="{Binding Email, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="5" MaxLength="50">
                            <i:Interaction.Behaviors>
                                <behaviors:TextBoxEnterKeyUpdateBehavior />
                            </i:Interaction.Behaviors>
                        </TextBox>

                        <TextBlock Grid.Row="4" Text="Phone: "/>
                        <TextBox Grid.Row="4" Grid.Column="1" Grid.ColumnSpan="3" 
                                 Text="{Binding Phone, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="5" MaxLength="50">
                            <i:Interaction.Behaviors>
                                <behaviors:TextBoxEnterKeyUpdateBehavior />
                            </i:Interaction.Behaviors>
                        </TextBox>

                        <Grid Grid.Row="5" Grid.ColumnSpan="4" Background="{StaticResource HeaderBackground}" HorizontalAlignment="Stretch" Margin="0,20,0,0">
                            <TextBlock Text="PERMISSIONS" Margin="5" HorizontalAlignment="Center" Foreground="{StaticResource HeaderForeground}"/>
                        </Grid>
                        
                        <TextBlock Grid.Row="6" Text="Designer: "/>
                        <CheckBox  Grid.Row="6" Grid.Column="1" IsChecked="{Binding PermissionDesign, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="5,15"/>

                        <TextBlock Grid.Row="6" Grid.Column="2" Text="Scheduler: "/>
                        <CheckBox  Grid.Row="6" Grid.Column="3" IsChecked="{Binding PermissionScheduler, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  Margin="5,15"/>

                        <TextBlock Grid.Row="7" Text="Alert: "/>
                        <CheckBox  Grid.Row="7" Grid.Column="1" IsChecked="{Binding PermissionAlert, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="5,15"/>

                        <TextBlock Grid.Row="7" Grid.Column="2" Text="Network: "/>
                        <CheckBox  Grid.Row="7" Grid.Column="3" IsChecked="{Binding PermissionNetwork, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="5,15"/>

                        <TextBlock Grid.Row="8" Text="Data Source: "/>
                        <CheckBox  Grid.Row="8" Grid.Column="1" IsChecked="{Binding PermissionDataSource, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="5,15"/>

                        <TextBlock Grid.Row="8" Grid.Column="2" Text="Airline Logo: "/>
                        <CheckBox  Grid.Row="8" Grid.Column="3" IsChecked="{Binding PermissionAirlineLogo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  Margin="5,15"/>

                        <TextBlock Grid.Row="9" Text="Players: "/>
                        <CheckBox  Grid.Row="9" Grid.Column="1" IsChecked="{Binding PermissionPlayersInformation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="5,15"/>

                        <TextBlock Grid.Row="9" Grid.Column="2" Text="Projects: "/>
                        <CheckBox  Grid.Row="9" Grid.Column="3" IsChecked="{Binding PermissionProjectsInformation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="5,15"/>

                        <TextBlock Grid.Row="10" Text="Proof Of Play: "/>
                        <CheckBox  Grid.Row="10" Grid.Column="1" IsChecked="{Binding PermissionProofOfPlay, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="5,15"/>

                        <TextBlock Grid.Row="10" Grid.Column="2" Text="Publishing: "/>
                        <CheckBox  Grid.Row="10" Grid.Column="3" IsChecked="{Binding PermissionChannelsPublishing, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="5,15"/>

                        <TextBlock Grid.Row="11"  Text="User: "/>
                        <CheckBox  Grid.Row="11" Grid.Column="1" IsChecked="{Binding PermissionUser, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="5,15"/>

                        <!--<TextBlock Grid.Row="11" Text="Permission Report: "/>
                        <CheckBox  Grid.Row="11" Grid.Column="1" IsChecked="{Binding PermissionReport, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="5,15"/>-->

                        <Button Grid.Row="12" Grid.ColumnSpan="4" Style="{StaticResource ConfirmButton}" ToolTip="Apply" VerticalAlignment="Bottom" HorizontalAlignment="Center" 
                                Width="150" Margin="0,0,0,5" Click="ButtonApply_Click">
                            <StackPanel Orientation="Horizontal" >
                                <!--<Image Source="../Images/iconButton_NetworkAdd.png" Width="20" Height="20" Margin="5,10,5,5"/>-->
                                <TextBlock Text="Apply" FontSize="16" Margin="5,8,5,5"/>
                            </StackPanel>
                        </Button>
                    </Grid>
                </DataTemplate>
            </StackPanel.Resources>
            <Separator Margin="0,0,0,0"/>
            <ContentPresenter Content="{Binding ElementName=dmtv, Path=SelectedItem}"/>
        </StackPanel>
    </Grid>
</UserControl>